# -*- coding: utf-8 -*-
"""cifar_10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1btHra3KCep1RdG3nKncz7GCfiy8KEpg0
"""

import torch
import torchvision
from torchvision import datasets, transforms, models
import numpy as np
import matplotlib.pyplot as plt

# Import the CIFAR10 class specifically
from torchvision.datasets import CIFAR10

# Load the data by instantiating the CIFAR10 class
# train=True gets the training set, download=True downloads if not available
train_dataset = CIFAR10(root='./data', train=True, download=True)
test_dataset = CIFAR10(root='./data', train=False, download=True)

# To get the data and targets as numpy arrays like the original code intended,
# you can access the data and targets attributes of the dataset objects.
X_train = train_dataset.data
y_train = np.array(train_dataset.targets) # Convert targets to numpy array
X_test = test_dataset.data
y_test = np.array(test_dataset.targets) # Convert targets to numpy array

print(X_train.shape)

print(y_train.shape)

y_test.shape

X_test.shape

X_train[0]

plt.imshow(X_train[0])

plt.imshow(X_train[1])

plt.figure(figsize = (15,2))
plt.imshow(X_train[1])

plt.figure(figsize = (15,2))
plt.imshow(X_train[0])

y_train[:5]

y_train = y_train.reshape(-1,)
y_train[:5]

classes = ["airplane", "automobile", "bird", "cat", "deer", "dog", "frog", "horse", "ship", "truck"]

classes[9]

def plot_sample(X, y, index):
    plt.figure(figsize = (15,2))
    plt.imshow(X[index])
    plt.xlabel(classes[y[index]])

plot_sample(X_train, y_train, 0)

plot_sample(X_train, y_train, 1)

plot_sample(X_train, y_train, 2)

plot_sample(X_train, y_train, 3)

X_train[0]

X_train[0]/255

X_train = X_train/255
X_test = X_test/255

# classes[y_classes[7]] # Original line with error
classes[y_test[9]] # Corrected line using y_test to get the class index

plot_sample(X_test, y_test, 9)

classes

